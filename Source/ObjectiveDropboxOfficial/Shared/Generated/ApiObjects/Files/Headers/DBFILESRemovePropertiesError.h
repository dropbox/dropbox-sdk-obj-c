///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBSerializableProtocol.h"

@class DBFILESLookUpPropertiesError;
@class DBFILESLookupError;
@class DBFILESRemovePropertiesError;

#pragma mark - API Object

///
/// The `RemovePropertiesError` union.
///
/// This class implements the `DBSerializable` protocol (serialize and
/// deserialize instance methods), which is required for all Obj-C SDK API route
/// objects.
///
@interface DBFILESRemovePropertiesError : NSObject <DBSerializable>

#pragma mark - Instance fields

/// The `DBFILESRemovePropertiesErrorTag` enum type represents the possible tag
/// states with which the `DBFILESRemovePropertiesError` union can exist.
typedef NS_ENUM(NSInteger, DBFILESRemovePropertiesErrorTag) {
  /// Property template does not exist for given identifier.
  DBFILESRemovePropertiesErrorTemplateNotFound,

  /// You do not have the permissions to modify this property template.
  DBFILESRemovePropertiesErrorRestrictedContent,

  /// (no description).
  DBFILESRemovePropertiesErrorOther,

  /// (no description).
  DBFILESRemovePropertiesErrorPath,

  /// (no description).
  DBFILESRemovePropertiesErrorPropertyGroupLookup,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBFILESRemovePropertiesErrorTag tag;

/// Property template does not exist for given identifier. @note Ensure the
/// `isTemplateNotFound` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly, copy) NSString * _Nonnull templateNotFound;

/// (no description). @note Ensure the `isPath` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBFILESLookupError * _Nonnull path;

/// (no description). @note Ensure the `isPropertyGroupLookup` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBFILESLookUpPropertiesError * _Nonnull propertyGroupLookup;

#pragma mark - Constructors

///
/// Initializes union class with tag state of "template_not_found".
///
/// Description of the "template_not_found" tag state: Property template does
/// not exist for given identifier.
///
/// @param templateNotFound Property template does not exist for given
/// identifier.
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithTemplateNotFound:(NSString * _Nonnull)templateNotFound;

///
/// Initializes union class with tag state of "restricted_content".
///
/// Description of the "restricted_content" tag state: You do not have the
/// permissions to modify this property template.
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithRestrictedContent;

///
/// Initializes union class with tag state of "other".
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithOther;

///
/// Initializes union class with tag state of "path".
///
/// @param path (no description).
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithPath:(DBFILESLookupError * _Nonnull)path;

///
/// Initializes union class with tag state of "property_group_lookup".
///
/// @param propertyGroupLookup (no description).
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithPropertyGroupLookup:(DBFILESLookUpPropertiesError * _Nonnull)propertyGroupLookup;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value
/// "template_not_found".
///
/// @note Call this method and ensure it returns true before accessing the
/// `templateNotFound` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "template_not_found".
///
- (BOOL)isTemplateNotFound;

///
/// Retrieves whether the union's current tag state has value
/// "restricted_content".
///
/// @return Whether the union's current tag state has value
/// "restricted_content".
///
- (BOOL)isRestrictedContent;

///
/// Retrieves whether the union's current tag state has value "other".
///
/// @return Whether the union's current tag state has value "other".
///
- (BOOL)isOther;

///
/// Retrieves whether the union's current tag state has value "path".
///
/// @note Call this method and ensure it returns true before accessing the
/// `path` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "path".
///
- (BOOL)isPath;

///
/// Retrieves whether the union's current tag state has value
/// "property_group_lookup".
///
/// @note Call this method and ensure it returns true before accessing the
/// `propertyGroupLookup` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "property_group_lookup".
///
- (BOOL)isPropertyGroupLookup;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString * _Nonnull)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the `DBFILESRemovePropertiesError` union.
///
@interface DBFILESRemovePropertiesErrorSerializer : NSObject

///
/// Serializes `DBFILESRemovePropertiesError` instances.
///
/// @param instance An instance of the `DBFILESRemovePropertiesError` API
/// object.
///
/// @return A json-compatible dictionary representation of the
/// `DBFILESRemovePropertiesError` API object.
///
+ (NSDictionary * _Nonnull)serialize:(DBFILESRemovePropertiesError * _Nonnull)instance;

///
/// Deserializes `DBFILESRemovePropertiesError` instances.
///
/// @param dict A json-compatible dictionary representation of the
/// `DBFILESRemovePropertiesError` API object.
///
/// @return An instantiation of the `DBFILESRemovePropertiesError` object.
///
+ (DBFILESRemovePropertiesError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
