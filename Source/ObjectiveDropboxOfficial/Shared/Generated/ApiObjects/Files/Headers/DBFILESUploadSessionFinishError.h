///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBSerializableProtocol.h"

@class DBFILESUploadSessionFinishError;
@class DBFILESUploadSessionLookupError;
@class DBFILESWriteError;

#pragma mark - API Object

///
/// The `UploadSessionFinishError` union.
///
/// This class implements the `DBSerializable` protocol (serialize and
/// deserialize instance methods), which is required for all Obj-C SDK API route
/// objects.
///
@interface DBFILESUploadSessionFinishError : NSObject <DBSerializable>

#pragma mark - Instance fields

/// The `DBFILESUploadSessionFinishErrorTag` enum type represents the possible
/// tag states with which the `DBFILESUploadSessionFinishError` union can exist.
typedef NS_ENUM(NSInteger, DBFILESUploadSessionFinishErrorTag) {
  /// The session arguments are incorrect; the value explains the reason.
  DBFILESUploadSessionFinishErrorLookupFailed,

  /// Unable to save the uploaded contents to a file.
  DBFILESUploadSessionFinishErrorPath,

  /// The batch request commits files into too many different shared folders.
  /// Please limit your batch request to files contained in a single shared
  /// folder.
  DBFILESUploadSessionFinishErrorTooManySharedFolderTargets,

  /// (no description).
  DBFILESUploadSessionFinishErrorOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBFILESUploadSessionFinishErrorTag tag;

/// The session arguments are incorrect; the value explains the reason. @note
/// Ensure the `isLookupFailed` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBFILESUploadSessionLookupError * _Nonnull lookupFailed;

/// Unable to save the uploaded contents to a file. @note Ensure the `isPath`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBFILESWriteError * _Nonnull path;

#pragma mark - Constructors

///
/// Initializes union class with tag state of "lookup_failed".
///
/// Description of the "lookup_failed" tag state: The session arguments are
/// incorrect; the value explains the reason.
///
/// @param lookupFailed The session arguments are incorrect; the value explains
/// the reason.
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithLookupFailed:(DBFILESUploadSessionLookupError * _Nonnull)lookupFailed;

///
/// Initializes union class with tag state of "path".
///
/// Description of the "path" tag state: Unable to save the uploaded contents to
/// a file.
///
/// @param path Unable to save the uploaded contents to a file.
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithPath:(DBFILESWriteError * _Nonnull)path;

///
/// Initializes union class with tag state of "too_many_shared_folder_targets".
///
/// Description of the "too_many_shared_folder_targets" tag state: The batch
/// request commits files into too many different shared folders. Please limit
/// your batch request to files contained in a single shared folder.
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithTooManySharedFolderTargets;

///
/// Initializes union class with tag state of "other".
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithOther;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value "lookup_failed".
///
/// @note Call this method and ensure it returns true before accessing the
/// `lookupFailed` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "lookup_failed".
///
- (BOOL)isLookupFailed;

///
/// Retrieves whether the union's current tag state has value "path".
///
/// @note Call this method and ensure it returns true before accessing the
/// `path` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "path".
///
- (BOOL)isPath;

///
/// Retrieves whether the union's current tag state has value
/// "too_many_shared_folder_targets".
///
/// @return Whether the union's current tag state has value
/// "too_many_shared_folder_targets".
///
- (BOOL)isTooManySharedFolderTargets;

///
/// Retrieves whether the union's current tag state has value "other".
///
/// @return Whether the union's current tag state has value "other".
///
- (BOOL)isOther;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString * _Nonnull)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the `DBFILESUploadSessionFinishError` union.
///
@interface DBFILESUploadSessionFinishErrorSerializer : NSObject

///
/// Serializes `DBFILESUploadSessionFinishError` instances.
///
/// @param instance An instance of the `DBFILESUploadSessionFinishError` API
/// object.
///
/// @return A json-compatible dictionary representation of the
/// `DBFILESUploadSessionFinishError` API object.
///
+ (NSDictionary * _Nonnull)serialize:(DBFILESUploadSessionFinishError * _Nonnull)instance;

///
/// Deserializes `DBFILESUploadSessionFinishError` instances.
///
/// @param dict A json-compatible dictionary representation of the
/// `DBFILESUploadSessionFinishError` API object.
///
/// @return An instantiation of the `DBFILESUploadSessionFinishError` object.
///
+ (DBFILESUploadSessionFinishError * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
